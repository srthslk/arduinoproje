#include <Keypad.h>
#include <LiquidCrystal_I2C_AvrI2C.h>
LiquidCrystal_I2C_AvrI2C lcd(0x27, 16, 2);
const int stepPin = 10;
const int dirPin = 11;
const int enPin = 12;
#define KEYPAD_ROWS 4
#define KEYPAD_COLS 4
char keys[KEYPAD_ROWS][KEYPAD_COLS] =
{
  { '1', '2', '3', 'A' },
  { '4', '5', '6', 'B' },
  { '7', '8', '9', 'C' },
  { '*', '0', '#', 'D' }
};
byte rowPins[] = { 2, 3, 4, 5};
byte colPins[] = { 6, 7, 8, 9 };
Keypad kpd
(
  makeKeymap(keys),
  rowPins, colPins,
  KEYPAD_ROWS, KEYPAD_COLS
);
void setup()
{
  lcd.begin();
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
  pinMode(enPin, OUTPUT);
  digitalWrite(enPin, LOW);
  Serial.begin(9600);
}
void loop()
{
  char key = kpd.getKey();
  int num;
  digitalWrite(stepPin, LOW);
  digitalWrite(dirPin, HIGH);
  while (key != '#')
  {
    if (key)
    {
      lcd.print(key);
    }
    switch (key)
    {
      case NO_KEY:
        break;
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
        num = num * 10 + (key - num) ;
        break;
      case 'A':
        lcd.clear();
        break;
    }
    key = kpd.getKey();
  }
  for (int x = 0; x <= num; x++)
  {
    digitalWrite(stepPin, HIGH);
    delayMicroseconds(200);
    digitalWrite(stepPin, LOW);
    delayMicroseconds(200);
  }
  return num;
}
